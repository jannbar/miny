// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                  Int                  @id @default(autoincrement())
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  name                String               @db.VarChar(255)
  email               String               @unique
  password            String
  loginCount          Int                  @default(0)
  slug                String               @unique
  calendarId          String?              @unique
  calendarEnabled     Boolean              @default(false)
  isAdmin             Boolean              @default(false)
  isPrivate           Boolean              @default(false)
  dates               Appointment[]
  passwordResetTokens PasswordResetToken[]
}

model Appointment {
  id              Int           @id @default(autoincrement())
  date            DateTime
  startTime       String
  endTime         String?
  isAssigned      Boolean       @default(false)
  isFlexible      Boolean       @default(false)
  partnerName     String?
  isGroupDate     Boolean       @default(false)
  maxParticipants Int?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  note            String?       @db.VarChar(255)
  privateNote     String?       @db.VarChar(255)
  participants    Participant[]
  isZoom          Boolean?

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  @@index([userId])
}

model Participant {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  createdAt DateTime @default(now())

  date   Appointment @relation(fields: [dateId], references: [id], onDelete: Cascade)
  dateId Int

  @@index([dateId])
}

model PasswordResetToken {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  token     String   @unique
  createdAt DateTime @default(now())

  @@index([userId])
}
