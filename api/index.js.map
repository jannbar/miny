{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/Users/jannik/www/miny/app/root.tsx", "/Users/jannik/www/miny/app/routes/healthcheck.tsx", "../app/db.server.ts", "/Users/jannik/www/miny/app/routes/edit/$id.tsx", "../app/session.server.ts", "../app/models/user.server.ts", "../app/models/date.server.ts", "../app/utils.ts", "../app/components/Container.tsx", "../app/components/Card.tsx", "../app/components/dashboard/Header.tsx", "../app/components/Heading.tsx", "../app/components/Badges.tsx", "../app/components/Buttons.tsx", "../app/components/Input.tsx", "/Users/jannik/www/miny/app/routes/register.tsx", "/Users/jannik/www/miny/app/routes/privacy.tsx", "/Users/jannik/www/miny/app/routes/u/$user.tsx", "../app/components/profile/Header.tsx", "../app/components/profile/Date.tsx", "/Users/jannik/www/miny/app/routes/logout.tsx", "/Users/jannik/www/miny/app/routes/index.tsx", "../app/components/dashboard/Welcome.tsx", "../app/components/dashboard/Dates.tsx", "/Users/jannik/www/miny/app/routes/login.tsx", "/Users/jannik/www/miny/app/routes/new.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from '@remix-run/node'\nimport { RemixServer } from '@remix-run/react'\nimport { renderToString } from 'react-dom/server'\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  )\n\n  responseHeaders.set('Content-Type', 'text/html')\n\n  return new Response('<!DOCTYPE html>' + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  })\n}\n", "import {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n} from '@remix-run/react'\nimport {\n  type MetaFunction,\n  type ErrorBoundaryComponent,\n  type LoaderFunction,\n  json,\n} from '@remix-run/node'\n\nimport tailwind from './styles/tailwind-build.css'\n\ntype LoaderData = {\n  url: string\n  host: string\n}\nexport const loader: LoaderFunction = ({ request }) => {\n  return json<LoaderData>({\n    url: request.url,\n    host: request.headers.get('host') ?? 'https://miny.vercel.app',\n  })\n}\n\nexport const meta: MetaFunction = ({ data }: { data: LoaderData }) => {\n  return {\n    charset: 'utf-8',\n    viewport: 'width=device-width,initial-scale=1',\n    title: 'miny',\n    description: 'Ganz einfach Diensttermine ausmachen.',\n    'og:title': 'miny',\n    'og:description': 'Ganz einfach Diensttermine ausmachen.',\n    'og:image': `https://${data.host}/og_image.png`,\n    'og:url': data.url,\n    'og:type': 'website',\n    'theme-color': '#1e293b',\n    'mobile-web-app-capable': 'yes',\n    'apple-mobile-web-app-title': 'miny',\n    'apple-mobile-web-app-capable': 'yes',\n    'apple-mobile-web-app-status-bar-style': 'default',\n    robots: 'noindex',\n  }\n}\n\nexport const links = () => {\n  return [\n    { rel: 'stylesheet', href: tailwind },\n    { rel: 'shortcut icon', href: '/favicon.ico' },\n    {\n      rel: 'prefetch',\n      as: 'image',\n      href: '/backpack.png',\n    },\n  ]\n}\n\nexport default function App() {\n  return (\n    <html lang=\"de\" className=\"h-full\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"h-full min-h-screen bg-slate-50 font-sans text-slate-600 antialiased\">\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  )\n}\n\nexport const ErrorBoundary: ErrorBoundaryComponent = ({ error }) => {\n  console.error(error)\n\n  return (\n    <html>\n      <head>\n        <title>Error!</title>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"p-4\">\n        <h1>Oh no! Ein Fehler ist aufgetreten.</h1>\n        <pre className=\"mt-3 inline-block bg-gray-200\">\n          {error.name}: {error.message}\n        </pre>\n        <Scripts />\n      </body>\n    </html>\n  )\n}\n\nexport const CatchBoundary = () => {\n  const caught = useCatch()\n\n  return (\n    <html>\n      <head>\n        <title>Whoopsie!</title>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"p-4\">\n        <h1>Whoopsie! Da ging leider was schief...</h1>\n        <pre className=\"mt-3 inline-block bg-gray-200\">\n          {caught.status} {caught.statusText}\n        </pre>\n        <Scripts />\n      </body>\n    </html>\n  )\n}\n", "import type { LoaderFunction } from '@remix-run/node'\nimport { prisma } from '~/db.server'\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const host =\n    request.headers.get('X-Forwarded-Host') ?? request.headers.get('host')\n\n  try {\n    await Promise.all([\n      prisma.user.count(),\n      fetch(`http://${host}`, { method: 'HEAD' }).then(r => {\n        if (!r.ok) return Promise.reject(r)\n      }),\n    ])\n    return new Response('OK')\n  } catch (error: unknown) {\n    console.log('healthcheck \u274C', { error })\n    return new Response('ERROR', { status: 500 })\n  }\n}\n", "import { PrismaClient } from '@prisma/client'\n\nlet prisma: PrismaClient\n\ndeclare global {\n  var __db__: PrismaClient\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\n// in production we'll have a single connection to the DB.\nif (process.env.NODE_ENV === 'production') {\n  prisma = new PrismaClient()\n} else {\n  if (!global.__db__) {\n    global.__db__ = new PrismaClient()\n  }\n  prisma = global.__db__\n  prisma.$connect()\n}\n\nexport { prisma }\n", "import {\n  Form,\n  Link,\n  useLoaderData,\n  useTransition,\n  useActionData,\n} from '@remix-run/react'\nimport {\n  type LoaderFunction,\n  type MetaFunction,\n  type ActionFunction,\n  redirect,\n  json,\n} from '@remix-run/node'\nimport { useState } from 'react'\nimport { requireUser } from '~/session.server'\nimport {\n  getDateById,\n  removePartnerFromDate,\n  updateDate,\n} from '~/models/date.server'\nimport { addDays, isPast, formatDistanceToNow, format } from 'date-fns'\nimport { de } from 'date-fns/locale'\nimport { badRequest, onlySpaces, validateDate, validateTime } from '~/utils'\nimport type { Appointment } from '@prisma/client'\n\nimport Container from '~/components/Container'\nimport Card from '~/components/Card'\nimport Header from '~/components/dashboard/Header'\nimport { headingStyles } from '~/components/Heading'\nimport { ErrorBadge } from '~/components/Badges'\nimport { SubmitButton } from '~/components/Buttons'\nimport Input from '~/components/Input'\n\ntype User = {\n  id: number\n  name: string\n  email: string\n  slug: string | null\n}\n\ntype LoaderData = {\n  user: User\n  date: Appointment\n}\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const user = await requireUser(request)\n  const id = params.id\n\n  if (typeof id !== 'string' || isNaN(Number(id))) {\n    return redirect('/')\n  }\n\n  const date = await getDateById(Number(id))\n\n  if (!date || date.userId !== user.id) {\n    return redirect('/')\n  }\n\n  return json<LoaderData>({ user, date })\n}\n\ninterface ActionData {\n  formError?: string\n  errors?: {\n    date?: string\n    startTime?: string\n    endTime?: string\n    isGroupDate?: string\n    maxParticipants?: string\n    note?: string\n    partner?: string\n  }\n  fields?: {\n    date: string\n    startTime: string\n    endTime: string | null\n    isGroupDate: boolean\n    maxParticipants: number | null\n    note: string | null\n    isFlexible: boolean\n    partner: string | null\n  }\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData()\n\n  // Action: save\n  if (formData.get('action') === 'save') {\n    const id = formData.get('id')\n    const date = formData.get('date')\n    const startTime = formData.get('startTime')\n    const endTime = formData.get('endTime')\n    const isGroupDate = formData.get('isGroupDate')\n    const maxParticipants = formData.get('maxParticipants')\n    const note = formData.get('note')\n    const flexible = formData.get('flexibleTime')\n    const partner = formData.get('partner')\n\n    if (\n      typeof date !== 'string' ||\n      typeof startTime !== 'string' ||\n      typeof id !== 'string' ||\n      isNaN(Number(id))\n    ) {\n      return badRequest<ActionData>({\n        formError: 'Pflichtfelder wurden nicht ausgef\u00FCllt',\n      })\n    }\n\n    let fields = {\n      id: Number(id),\n      date,\n      startTime,\n      endTime: typeof endTime === 'string' ? endTime : null,\n      isGroupDate: isGroupDate === 'on',\n      maxParticipants:\n        typeof maxParticipants === 'string' ? parseInt(maxParticipants) : null,\n      note: typeof note === 'string' ? note : null,\n      isFlexible: flexible === 'on',\n      partner: typeof partner === 'string' ? partner : null,\n    }\n\n    // Validate date\n    if (!validateDate(date)) {\n      return badRequest<ActionData>({\n        fields,\n        errors: {\n          date: 'Ung\u00FCltiges Datum',\n        },\n      })\n    }\n\n    if (isPast(new Date(date))) {\n      return badRequest<ActionData>({\n        fields,\n        errors: {\n          date: 'Ung\u00FCltiges Datum (zu fr\u00FCh)',\n        },\n      })\n    }\n\n    fields.date = new Date(date).toISOString()\n\n    // Validate start and end time\n    if (!fields.isFlexible && !validateTime(fields.startTime)) {\n      return badRequest<ActionData>({\n        fields,\n        errors: {\n          startTime: 'Ung\u00FCltige Uhrzeit',\n        },\n      })\n    }\n\n    if (fields.isFlexible && onlySpaces(fields.startTime)) {\n      return badRequest<ActionData>({\n        fields,\n        errors: {\n          startTime: 'Ung\u00FCltiges Format',\n        },\n      })\n    } else {\n      // Remove any whitespace at start and end\n      fields.startTime = fields.startTime.trim()\n    }\n\n    if (fields.endTime && !validateTime(fields.endTime)) {\n      return badRequest<ActionData>({\n        fields,\n        errors: {\n          endTime: 'Ung\u00FCltige Uhrzeit',\n        },\n      })\n    }\n\n    if (fields.endTime && fields.endTime < fields.startTime) {\n      return badRequest<ActionData>({\n        fields,\n        errors: {\n          endTime: 'Fr\u00FCher als Start',\n        },\n      })\n    }\n\n    // Validate maxParticipants\n    if (fields.maxParticipants) {\n      if (isNaN(fields.maxParticipants)) {\n        return badRequest<ActionData>({\n          fields,\n          errors: {\n            maxParticipants: 'Keine g\u00FCltige Zahl',\n          },\n        })\n      }\n      if (fields.maxParticipants > 100) {\n        return badRequest<ActionData>({\n          fields,\n          errors: {\n            maxParticipants: 'Max. 100 erlaubt',\n          },\n        })\n      }\n    }\n\n    await updateDate(fields)\n    return redirect('/')\n  }\n\n  // Action: Remove partner\n  if (formData.get('action') === 'remove-partner') {\n    const id = formData.get('id')\n    if (typeof id !== 'string' || isNaN(Number(id))) {\n      return badRequest<ActionData>({\n        formError: 'Ung\u00FCltige ID',\n      })\n    }\n\n    await removePartnerFromDate(Number(id))\n    return redirect('/')\n  }\n}\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Termin bearbeiten',\n  }\n}\n\nexport default function EditDate() {\n  const { user, date } = useLoaderData<LoaderData>()\n  const actionData = useActionData<ActionData>()\n  const transition = useTransition()\n  const [isGroupDate, setIsGroupdate] = useState(date.isGroupDate)\n  const [fixedStart, setFixedStart] = useState(!date.isFlexible)\n  const [selfAssignPartner, setSelfAssignPartner] = useState(\n    typeof date.partnerName === 'string'\n  )\n\n  const tomorrow = format(addDays(new Date(), 1), 'yyyy-MM-dd')\n  const updatedAt = formatDistanceToNow(new Date(date.updatedAt), {\n    locale: de,\n    addSuffix: true,\n  })\n\n  return (\n    <div className=\"py-10\">\n      <Container>\n        <Header username={user.name} />\n        <Card withMarginTop>\n          <h1 className={headingStyles}>Termin bearbeiten</h1>\n\n          <p className=\"mt-4 text-sm italic text-slate-500\">\n            Letzte \u00C4nderung: {updatedAt}\n          </p>\n\n          <Form className=\"mt-4\" method=\"post\">\n            {actionData?.formError ? (\n              <ErrorBadge message={actionData.formError} />\n            ) : null}\n            <fieldset disabled={transition.state === 'submitting'}>\n              <div>\n                <Input\n                  name=\"date\"\n                  id=\"date\"\n                  label=\"Datum*\"\n                  type=\"date\"\n                  min={tomorrow}\n                  defaultValue={new Date(date.date).toLocaleDateString('en-CA')}\n                  required\n                  validationError={actionData?.errors?.date}\n                />\n              </div>\n\n              <div className=\"mt-6 flex items-center\">\n                <input\n                  id=\"flexibleTime\"\n                  name=\"flexibleTime\"\n                  type=\"checkbox\"\n                  defaultChecked={!fixedStart}\n                  onChange={() => setFixedStart(!fixedStart)}\n                  className=\"h-4 w-4 rounded border-slate-300 text-slate-600 focus:ring-slate-200 focus:ring-opacity-50\"\n                />\n                <label htmlFor=\"flexibleTime\" className=\"ml-2 block\">\n                  Flexible Zeit\n                </label>\n              </div>\n\n              <div className=\"mt-4 flex space-x-4\">\n                <div className=\"w-full\">\n                  <Input\n                    name=\"startTime\"\n                    id=\"startTime\"\n                    label={fixedStart ? 'Von*' : 'Zeit*'}\n                    type={fixedStart ? 'time' : 'text'}\n                    placeholder={!fixedStart ? 'Vormittags' : ''}\n                    defaultValue={date.startTime}\n                    validationError={actionData?.errors?.startTime}\n                    required\n                  />\n                </div>\n                {fixedStart ? (\n                  <div className=\"w-full\">\n                    <Input\n                      name=\"endTime\"\n                      id=\"endTime\"\n                      label=\"Bis\"\n                      type=\"time\"\n                      defaultValue={date.endTime || undefined}\n                      validationError={actionData?.errors?.endTime}\n                    />\n                  </div>\n                ) : null}\n              </div>\n\n              {!selfAssignPartner && (\n                <div className=\"mt-6 flex items-center\">\n                  <input\n                    id=\"groupDate\"\n                    name=\"isGroupDate\"\n                    type=\"checkbox\"\n                    defaultChecked={isGroupDate}\n                    onChange={e => setIsGroupdate(e.target.checked)}\n                    className=\"h-4 w-4 rounded border-slate-300 text-slate-600 focus:ring-slate-200 focus:ring-opacity-50\"\n                  />\n                  <label htmlFor=\"groupDate\" className=\"ml-2 block\">\n                    Gruppentermin\n                  </label>\n                </div>\n              )}\n\n              {isGroupDate && (\n                <div className=\"mt-4\">\n                  <Input\n                    label=\"Wie viele sollen mitmachen k\u00F6nnen? (Max. 100)*\"\n                    id=\"maxParticipants\"\n                    name=\"maxParticipants\"\n                    type=\"number\"\n                    min={2}\n                    max={100}\n                    defaultValue={date.maxParticipants || 2}\n                    pattern=\"[0-9]\"\n                    validationError={actionData?.errors?.maxParticipants}\n                    required\n                  />\n                </div>\n              )}\n\n              <div className=\"mt-4\">\n                <Input\n                  label=\"Notiz\"\n                  id=\"note\"\n                  name=\"note\"\n                  type=\"text\"\n                  defaultValue={date.note || undefined}\n                  validationError={actionData?.errors?.note}\n                />\n              </div>\n\n              {!isGroupDate && !date.isAssigned && (\n                <div className=\"mt-6 flex items-center\">\n                  <input\n                    id=\"selfAssignedPartner\"\n                    name=\"selfAssignedPartner\"\n                    type=\"checkbox\"\n                    defaultChecked={selfAssignPartner}\n                    onChange={() => setSelfAssignPartner(!selfAssignPartner)}\n                    className=\"h-4 w-4 rounded border-slate-300 text-slate-600 focus:ring-slate-200 focus:ring-opacity-50\"\n                  />\n                  <label htmlFor=\"selfAssignedPartner\" className=\"ml-2 block\">\n                    Partner eintragen\n                  </label>\n                </div>\n              )}\n\n              {selfAssignPartner && (\n                <div className=\"mt-4\">\n                  <Input\n                    label=\"Partner*\"\n                    id=\"partner\"\n                    name=\"partner\"\n                    type=\"text\"\n                    defaultValue={date.partnerName || undefined}\n                    validationError={actionData?.errors?.partner}\n                    required\n                  />\n                </div>\n              )}\n\n              {date.isAssigned && !date.isGroupDate && (\n                <button\n                  className=\"mt-4 text-sm font-medium text-red-700 hover:text-red-800\"\n                  type=\"submit\"\n                  name=\"action\"\n                  value=\"remove-partner\"\n                >\n                  Partner entfernen\n                </button>\n              )}\n\n              <input type=\"hidden\" name=\"id\" value={date.id} />\n            </fieldset>\n\n            <div className=\"mt-8 flex items-center justify-between\">\n              <Link to=\"/\" className=\"text-sm underline underline-offset-1\">\n                Zur\u00FCck\n              </Link>\n              <SubmitButton\n                type=\"submit\"\n                name=\"action\"\n                value=\"save\"\n                title=\"Speichern\"\n                disabled={transition.state === 'submitting'}\n                label={\n                  transition.state === 'submitting'\n                    ? 'Speichert...'\n                    : 'Speichern'\n                }\n              />\n            </div>\n          </Form>\n        </Card>\n      </Container>\n    </div>\n  )\n}\n", "import { createCookieSessionStorage, redirect } from '@remix-run/node'\nimport invariant from 'tiny-invariant'\n\nimport { getUserById } from './models/user.server'\n\ninvariant(process.env.SESSION_SECRET, 'SESSION_SECRET must be set')\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: '__session',\n    httpOnly: true,\n    maxAge: 0,\n    path: '/',\n    sameSite: 'lax',\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === 'production',\n  },\n})\n\nconst USER_SESSION_KEY = 'userId'\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get('Cookie')\n  return sessionStorage.getSession(cookie)\n}\n\nexport async function getUserId(request: Request): Promise<string | undefined> {\n  const session = await getSession(request)\n  const userId = session.get(USER_SESSION_KEY)\n  return userId\n}\n\nexport async function getUser(request: Request) {\n  const userId = await getUserId(request)\n  if (userId === undefined) return null\n\n  const user = await getUserById(Number(userId))\n  if (user) return user\n\n  throw await logout(request)\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n): Promise<string> {\n  const userId = await getUserId(request)\n  if (!userId) {\n    const searchParams = new URLSearchParams([['redirectTo', redirectTo]])\n    throw redirect(`/login?${searchParams}`)\n  }\n  return userId\n}\n\nexport async function requireUser(request: Request) {\n  const userId = await requireUserId(request)\n\n  const user = await getUserById(Number(userId))\n  if (user) return user\n\n  throw await logout(request)\n}\n\nexport async function createUserSession({\n  request,\n  userId,\n  remember,\n  redirectTo,\n}: {\n  request: Request\n  userId: number\n  remember: boolean\n  redirectTo: string\n}) {\n  const session = await getSession(request)\n  session.set(USER_SESSION_KEY, userId)\n  return redirect(redirectTo, {\n    headers: {\n      'Set-Cookie': await sessionStorage.commitSession(session, {\n        maxAge: remember\n          ? 60 * 60 * 24 * 30 // 30 days\n          : undefined,\n      }),\n    },\n  })\n}\n\nexport async function logout(request: Request) {\n  const session = await getSession(request)\n  return redirect('/login', {\n    headers: {\n      'Set-Cookie': await sessionStorage.destroySession(session),\n    },\n  })\n}\n", "import type { User } from '@prisma/client'\nimport bcrypt from 'bcryptjs'\nimport crypto from 'crypto'\n\nimport { prisma } from '~/db.server'\n\nexport type { User } from '@prisma/client'\n\nexport type PublicUser = {\n  id: number\n  name: string\n  email: string\n  slug: string | null\n  loginCount: number\n}\n\nexport async function getUserById(id: User['id']) {\n  return prisma.user.findUnique({\n    where: { id },\n    select: {\n      id: true,\n      name: true,\n      email: true,\n      slug: true,\n      loginCount: true,\n    },\n  })\n}\n\nexport async function getUserByEmail(email: User['email']) {\n  return prisma.user.findUnique({\n    where: { email },\n    select: {\n      id: true,\n      name: true,\n      email: true,\n      slug: true,\n    },\n  })\n}\n\nexport async function getUserBySlug(slug: string) {\n  return prisma.user.findFirst({\n    where: { slug },\n    select: {\n      id: true,\n      name: true,\n      email: true,\n      slug: true,\n    },\n  })\n}\n\nexport async function createUser(\n  email: User['email'],\n  password: string,\n  name: string\n) {\n  const hashedPassword = await bcrypt.hash(password, 10)\n\n  let slug = name.trim().replace(' ', '-').toLowerCase()\n  const existingSlug = await getUserBySlug(slug)\n  if (existingSlug) {\n    const randomSlug = crypto.randomBytes(5).toString('hex')\n    slug = `${slug}-${randomSlug}`\n  }\n\n  return prisma.user.create({\n    data: {\n      name,\n      email,\n      password: hashedPassword,\n      slug,\n    },\n  })\n}\n\nexport async function verifyLogin(email: User['email'], password: string) {\n  const user = await prisma.user.findUnique({\n    where: { email },\n  })\n\n  if (!user || !user.password) {\n    return null\n  }\n\n  const isValid = await bcrypt.compare(password, user.password)\n\n  if (!isValid) {\n    return null\n  }\n\n  await prisma.user.update({\n    where: {\n      email,\n    },\n    data: {\n      loginCount: user.loginCount + 1,\n    },\n  })\n\n  const { password: _password, ...userWithoutPassword } = user\n\n  return userWithoutPassword\n}\n", "import type { User, Prisma, Appointment } from '@prisma/client'\nimport { prisma } from '~/db.server'\nimport nodemailer from 'nodemailer'\nimport { formatDate } from '~/utils'\nimport { formatInTimeZone } from 'date-fns-tz'\n\nexport type DateWithParticipants = Prisma.AppointmentGetPayload<{\n  include: {\n    participants: {\n      select: {\n        name: true\n      }\n    }\n  }\n}>\n\nexport async function isOwner(\n  ownerId: Appointment['userId'],\n  userId: User['id']\n) {\n  return ownerId === userId\n}\n\nexport async function getDateById(id: Appointment['id']) {\n  return prisma.appointment.findUnique({\n    where: { id },\n  })\n}\n\nexport async function getParticipateCount(id: Appointment['id']) {\n  const appointment = await prisma.appointment.findUnique({\n    where: { id },\n    include: {\n      _count: {\n        select: { participants: true },\n      },\n    },\n  })\n\n  if (!appointment) return null\n\n  return appointment._count.participants\n}\n\ntype AppointmentWithUserAndParticipants = Prisma.AppointmentGetPayload<{\n  include: {\n    user: {\n      select: {\n        email: true\n        name: true\n      }\n    }\n    _count: {\n      select: {\n        participants: true\n      }\n    }\n  }\n}>\n\nexport async function getDateWithUserAndParticipants(id: Appointment['id']) {\n  return prisma.appointment.findUnique({\n    where: { id },\n    include: {\n      user: {\n        select: {\n          email: true,\n          name: true,\n        },\n      },\n      _count: {\n        select: { participants: true },\n      },\n    },\n  })\n}\n\nexport async function getDatesByUserId(id: User['id']) {\n  return prisma.appointment.findMany({\n    where: {\n      userId: id,\n      date: {\n        gte:\n          formatInTimeZone(new Date(), 'Europe/Berlin', 'yyyy-MM-dd') +\n          'T00:00:00.000Z',\n      },\n    },\n    orderBy: {\n      date: 'asc',\n    },\n    include: {\n      participants: {\n        select: {\n          name: true,\n        },\n      },\n    },\n  })\n}\n\nexport async function getFreeDates(userId: User['id']) {\n  return prisma.appointment.findMany({\n    where: {\n      userId,\n      isAssigned: false,\n      date: {\n        gte:\n          formatInTimeZone(new Date(), 'Europe/Berlin', 'yyyy-MM-dd') +\n          'T00:00:00.000Z',\n      },\n    },\n    orderBy: {\n      date: 'asc',\n    },\n    include: {\n      participants: {\n        select: {\n          name: true,\n        },\n      },\n    },\n  })\n}\n\ninterface CreateFields {\n  date: string\n  startTime: string\n  endTime?: string | null\n  isGroupDate?: boolean\n  maxParticipants?: number | null\n  note?: string | null\n  isFlexible: boolean\n  partner?: string | null\n}\n\nexport async function createDate(fields: CreateFields, userId: string) {\n  return await prisma.appointment.create({\n    data: {\n      date: fields.date,\n      startTime: fields.startTime,\n      endTime: fields.endTime,\n      isGroupDate: fields.isGroupDate,\n      maxParticipants: fields.maxParticipants,\n      note: fields.note,\n      userId: Number(userId),\n      isFlexible: fields.isFlexible,\n      partnerName: fields.partner,\n      isAssigned: typeof fields.partner === 'string',\n    },\n  })\n}\n\ninterface UpdateFields extends CreateFields {\n  id: number\n}\n\nexport async function updateDate(fields: UpdateFields) {\n  return await prisma.appointment.update({\n    where: {\n      id: fields.id,\n    },\n    data: {\n      date: fields.date,\n      startTime: fields.startTime,\n      endTime: fields.endTime,\n      isGroupDate: fields.isGroupDate,\n      maxParticipants: fields.maxParticipants,\n      note: fields.note,\n      isFlexible: fields.isFlexible,\n      partnerName: fields.partner,\n      isAssigned: typeof fields.partner === 'string',\n    },\n  })\n}\n\nexport async function removePartnerFromDate(id: Appointment['id']) {\n  return await prisma.appointment.update({\n    where: {\n      id,\n    },\n    data: {\n      isAssigned: false,\n      partnerName: null,\n    },\n  })\n}\n\nexport async function deleteDate(id: Appointment['id']) {\n  const date = await getDateById(id)\n  if (!date) return null\n\n  return await prisma.appointment.delete({\n    where: {\n      id,\n    },\n  })\n}\n\nexport async function dateExistsAndIsAvailable(id: Appointment['id']) {\n  const appointment = await getDateWithUserAndParticipants(id)\n\n  if (!appointment || appointment.isAssigned) return null\n\n  return appointment\n}\n\nexport async function assignDate(dateId: Appointment['id'], name: string) {\n  const appointment = await getDateById(dateId)\n  if (!appointment) return null\n\n  if (appointment.isGroupDate) {\n    await prisma.participant.create({\n      data: {\n        name: name.trim(),\n        dateId,\n      },\n    })\n\n    const participants = await getParticipateCount(dateId)\n\n    const reachedMaxParticipants = participants === appointment.maxParticipants\n    if (reachedMaxParticipants) {\n      return await prisma.appointment.update({\n        where: {\n          id: dateId,\n        },\n        data: {\n          isAssigned: true,\n        },\n      })\n    }\n\n    return null\n  } else {\n    return await prisma.appointment.update({\n      where: {\n        id: dateId,\n      },\n      data: {\n        isAssigned: true,\n        partnerName: name.trim(),\n      },\n    })\n  }\n}\n\ninterface Recipient {\n  email: User['email']\n  name: User['name']\n}\n\nexport async function sendAssignmentEmail(\n  recipient: Recipient,\n  partnerName: string,\n  appointment: AppointmentWithUserAndParticipants\n) {\n  const transporter = nodemailer.createTransport({\n    service: 'gmail',\n    auth: {\n      user: process.env.GMAIL_USER,\n      pass: process.env.GMAIL_PW,\n    },\n  })\n\n  const { isGroupDate } = appointment\n  const subject = isGroupDate\n    ? 'Neuer Teilnehmer f\u00FCr Gruppentermin'\n    : `Diensttermin mit ${partnerName}`\n\n  let text = `Hi ${recipient.name}!\\n\\n`\n  if (isGroupDate) {\n    const participants = await getParticipateCount(appointment.id)\n    text += `${partnerName} hat sich f\u00FCr einen Gruppentermin eingetragen. Ihr seid jetzt ${participants}/${appointment.maxParticipants} Teilnehmer.`\n  } else {\n    text += `${partnerName} hat sich f\u00FCr einen Diensttermin mit dir eingetragen.`\n  }\n\n  text += `\\n\\nEuer Termin:\\n`\n  text += `${formatDate(appointment.date.toString())}, ${appointment.startTime}`\n  if (appointment.endTime && !appointment.isFlexible) {\n    text += `\u2013${appointment.endTime}`\n  }\n  text += '\\n\\nViel Spa\u00DF im Dienst!\\nminy\\n\\n'\n  text += 'Hier kommst du zu deinen Terminen: https://dienst.vercel.app/'\n\n  await transporter.sendMail({\n    from: '\"miny\" <my.miny.app@gmail.com>',\n    to: recipient.email,\n    subject,\n    text,\n  })\n}\n", "import { json } from '@remix-run/node'\n\nexport function badRequest<T>(data: T) {\n  return json(data, { status: 400 })\n}\n\nexport function validateEmail(email: unknown): email is string {\n  return typeof email === 'string' && email.length > 3 && email.includes('@')\n}\n\nexport function validateStringLength(value: string, minLength: number) {\n  return value.length < minLength\n    ? `Zu kurz (mind. ${minLength} Zeichen)`\n    : undefined\n}\n\nexport function validateDate(dateStr: string) {\n  if (!/^\\d{4}-\\d{2}-\\d{2}$/.test(dateStr)) {\n    return false\n  }\n\n  const date = new Date(dateStr)\n  const timestamp = date.getTime()\n\n  if (typeof timestamp !== 'number' || Number.isNaN(timestamp)) {\n    return false\n  }\n\n  return date.toISOString().startsWith(dateStr)\n}\n\nexport function validateTime(timeStr: string) {\n  return /^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/.test(timeStr)\n}\n\nexport const onlySpaces = (str: string) => str.trim().length === 0\n\nexport const formatDate = (date: string) =>\n  new Date(date).toLocaleDateString('de-DE', {\n    day: '2-digit',\n    month: 'long',\n    weekday: 'short',\n  })\n", "const Container: React.FC = ({ children }) => (\n  <div className=\"mx-auto max-w-2xl px-6\">{children}</div>\n)\n\nexport default Container\n", "interface CardProps {\n  withMarginTop?: boolean\n}\n\nconst Card: React.FC<CardProps> = ({ children, withMarginTop = false }) => (\n  <div\n    className={`rounded-lg border border-slate-200 bg-white p-8 shadow-sm ${\n      withMarginTop ? 'mt-4' : ''\n    }`}\n  >\n    {children}\n  </div>\n)\n\nexport default Card\n", "import { Link, Form } from '@remix-run/react'\n\nexport default function Header({ username }: { username: string }) {\n  return (\n    <div className=\"mb-8 flex items-center justify-between\">\n      <div className=\"flex items-center\">\n        <div className=\"block rounded-lg bg-red-400 bg-opacity-20 p-2\">\n          <img\n            src=\"/backpack.png\"\n            className=\"h-5\"\n            alt=\"Rucksack Emoji\"\n            height={20}\n            width={20}\n          />\n        </div>\n        <Link className=\"ml-2 block text-sm font-medium\" to=\"/\">\n          {username}\n          {username.slice(-1) === 's' ? \"'\" : 's'} Diensttermine\n        </Link>\n      </div>\n      <Form action=\"/logout\" method=\"post\">\n        <button\n          type=\"submit\"\n          className=\"text-xs font-normal text-red-700 underline underline-offset-1 hover:text-red-600\"\n        >\n          Abmelden\n        </button>\n      </Form>\n    </div>\n  )\n}\n", "export const headingStyles =\n  'font-serif text-2xl sm:text-2xl font-black text-slate-700'\n", "import { ExclamationCircleIcon } from '@heroicons/react/outline'\n\nexport function ErrorBadge({ message }: { message: string }) {\n  return (\n    <div className=\"mb-6 flex items-center rounded-lg bg-red-50 p-3 text-sm text-red-500\">\n      <ExclamationCircleIcon className=\"mr-1.5 h-4\" /> {message}\n    </div>\n  )\n}\n", "import { ButtonHTMLAttributes } from 'react'\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  label: string\n}\n\nexport const SubmitButton = ({ label, ...props }: ButtonProps) => (\n  <button\n    className=\"rounded-md border border-transparent bg-slate-700 px-4 py-2 text-xs font-medium uppercase tracking-widest text-white ring-slate-300 transition duration-150 ease-in-out hover:bg-slate-600 focus:border-slate-800 focus:outline-none focus:ring active:bg-slate-800 disabled:opacity-25\"\n    {...props}\n  >\n    {label}\n  </button>\n)\n", "import { type InputHTMLAttributes } from 'react'\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  label: string\n  validationError?: string\n  name: string\n}\n\nexport const labelStyles = 'mb-0.5 block text-sm font-medium'\nexport const inputStyles =\n  'mt-1 block w-full rounded-lg border-slate-300 shadow-sm focus:border-slate-400 focus:ring focus:ring-slate-200 focus:ring-opacity-50 text-left'\nexport const errorStyles = 'mt-1.5 text-sm font-medium text-red-700'\n\nconst Input = ({ name, label, validationError, ...props }: InputProps) => {\n  return (\n    <>\n      <label htmlFor={name} className={labelStyles}>\n        {label}\n      </label>\n\n      <input\n        id={name}\n        name={name}\n        className={inputStyles}\n        aria-invalid={validationError ? true : undefined}\n        aria-describedby={`${name}-error`}\n        {...props}\n      />\n\n      {validationError ? (\n        <p className={errorStyles} role=\"alert\" id={`${name}-error`}>\n          {validationError}\n        </p>\n      ) : null}\n    </>\n  )\n}\n\nexport default Input\n", "import {\n  Form,\n  Link,\n  useActionData,\n  useTransition,\n  useSearchParams,\n} from '@remix-run/react'\nimport {\n  redirect,\n  json,\n  type LoaderFunction,\n  type ActionFunction,\n  type MetaFunction,\n  type HeadersFunction,\n} from '@remix-run/node'\nimport { getUserId, createUserSession } from '~/session.server'\nimport { createUser, getUserByEmail } from '~/models/user.server'\nimport { validateEmail, validateStringLength, badRequest } from '~/utils'\n\nimport Input from '~/components/Input'\nimport { SubmitButton } from '~/components/Buttons'\nimport { ErrorBadge } from '~/components/Badges'\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request)\n  if (userId) return redirect('/')\n  return json({})\n}\n\ninterface ActionData {\n  formError?: string\n  errors?: {\n    firstName?: string\n    email?: string\n    password?: string\n    confirmPassword?: string\n  }\n  fields?: {\n    firstName: string\n    email: string\n    password: string\n    confirmPassword: string\n  }\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData()\n\n  const firstName = formData.get('firstName')\n  const email = formData.get('email')\n  const password = formData.get('password')\n  const confirmPassword = formData.get('confirmPassword')\n  const redirectTo = formData.get('redirectTo')\n\n  // Return early if one of the fields is undefined or not a string\n  if (\n    typeof firstName !== 'string' ||\n    typeof email !== 'string' ||\n    typeof password !== 'string' ||\n    typeof confirmPassword !== 'string'\n  ) {\n    return badRequest<ActionData>({\n      formError: 'Formular wurde nicht vollst\u00E4ndig ausgef\u00FCllt',\n    })\n  }\n\n  const fields = {\n    firstName,\n    email,\n    password,\n    confirmPassword,\n    redirectTo,\n  }\n\n  const errors = {\n    firstName: validateStringLength(firstName, 2),\n    email: !validateEmail(email) ? 'Ung\u00FCltige E-Mail' : undefined,\n    password: validateStringLength(password, 6),\n    confirmPassword:\n      fields.confirmPassword !== fields.password\n        ? 'Passw\u00F6rter stimmen nicht \u00FCberein'\n        : undefined,\n  }\n\n  if (Object.values(errors).some(Boolean)) {\n    return badRequest<ActionData>({ errors, fields })\n  }\n\n  const existingUser = await getUserByEmail(email)\n  if (existingUser) {\n    return badRequest<ActionData>({\n      errors: {\n        email: 'E-Mail wird schon verwendet',\n      },\n    })\n  }\n\n  const user = await createUser(email, password, firstName)\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: false,\n    redirectTo: typeof redirectTo === 'string' ? redirectTo : '/',\n  })\n}\n\nexport const headers: HeadersFunction = () => {\n  return {\n    'Cache-Control': `s-maxage=${60 * 60 * 24 * 30}`,\n  }\n}\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Registrieren',\n    'og:title': 'Registrieren | miny',\n  }\n}\n\nexport default function Register() {\n  const [searchParams] = useSearchParams()\n  const redirectTo = searchParams.get('redirectTo') || '/'\n  const actionData = useActionData<ActionData>()\n  const transition = useTransition()\n\n  return (\n    <div className=\"flex min-h-screen flex-col items-center justify-center\">\n      <div className=\"block rounded-lg bg-red-400 bg-opacity-20 p-2\">\n        <img\n          src=\"/backpack.png\"\n          className=\"h-8\"\n          alt=\"Rucksack Emoji\"\n          height={32}\n          width={32}\n        />\n      </div>\n      <div className=\"mt-6 w-full max-w-xs rounded-lg bg-white px-6 py-4 shadow-md sm:max-w-md\">\n        <Form method=\"post\">\n          {actionData?.formError ? (\n            <ErrorBadge message={actionData.formError} />\n          ) : null}\n\n          <fieldset disabled={transition.state === 'submitting'}>\n            <Input\n              type=\"text\"\n              name=\"firstName\"\n              label=\"Vorname\"\n              required\n              autoFocus\n              minLength={2}\n              defaultValue={actionData?.fields?.firstName}\n              validationError={actionData?.errors?.firstName}\n              autoComplete=\"given-name\"\n            />\n\n            <div className=\"mt-4\">\n              <Input\n                type=\"email\"\n                name=\"email\"\n                label=\"E-Mail\"\n                required\n                defaultValue={actionData?.fields?.email}\n                validationError={actionData?.errors?.email}\n                autoComplete=\"email\"\n              />\n            </div>\n\n            <div className=\"mt-4\">\n              <Input\n                type=\"password\"\n                name=\"password\"\n                label=\"Passwort\"\n                required\n                autoComplete=\"new-password\"\n                minLength={6}\n                defaultValue={actionData?.fields?.password}\n                validationError={actionData?.errors?.password}\n              />\n            </div>\n\n            <div className=\"mt-4\">\n              <Input\n                type=\"password\"\n                name=\"confirmPassword\"\n                label=\"Passwort best\u00E4tigen\"\n                required\n                minLength={6}\n                autoComplete=\"new-password\"\n                defaultValue={actionData?.fields?.confirmPassword}\n                validationError={actionData?.errors?.confirmPassword}\n              />\n            </div>\n\n            <div className=\"mt-4 flex items-center\">\n              <input\n                id=\"agreeGdpr\"\n                name=\"agreeGdpr\"\n                type=\"checkbox\"\n                defaultChecked\n                className=\"h-4 w-4 rounded border-slate-300 text-slate-600 focus:ring-slate-200 focus:ring-opacity-50\"\n                required\n              />\n              <label\n                htmlFor=\"agreeGdpr\"\n                className=\"ml-2 block text-sm font-medium\"\n              >\n                Ich stimme der{' '}\n                <Link\n                  to=\"/privacy\"\n                  className=\"font-medium underline underline-offset-1 hover:no-underline\"\n                >\n                  Datenschutzerkl\u00E4rung\n                </Link>{' '}\n                zu\n              </label>\n            </div>\n\n            <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n\n            <div className=\"mt-4 flex items-center justify-between\">\n              <div className=\"space-y-1\">\n                <Link\n                  className=\"block text-sm underline hover:text-slate-900\"\n                  to={{\n                    pathname: '/login',\n                    search: searchParams.toString(),\n                  }}\n                >\n                  Login\n                </Link>\n              </div>\n\n              <SubmitButton\n                type=\"submit\"\n                label={\n                  transition.state === 'submitting' ? 'Lade...' : 'Registrieren'\n                }\n              />\n            </div>\n          </fieldset>\n        </Form>\n      </div>\n      <Link\n        to=\"/privacy\"\n        className=\"mt-4 text-center text-xs text-slate-500 underline\"\n      >\n        Datenschutzerkl\u00E4rung\n      </Link>\n    </div>\n  )\n}\n", "import type { MetaFunction } from '@remix-run/node'\nimport { Link } from '@remix-run/react'\nimport Card from '~/components/Card'\nimport Container from '~/components/Container'\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Datenschutzerkl\u00E4rung',\n  }\n}\n\nexport default function Privacy() {\n  return (\n    <div className=\"py-10\">\n      <Container>\n        <div className=\"mb-8 flex items-center\">\n          <div className=\"block rounded-lg bg-red-400 bg-opacity-20 p-2\">\n            <img\n              src=\"/backpack.png\"\n              className=\"h-5\"\n              alt=\"Rucksack Emoji\"\n              height={20}\n              width={20}\n            />\n          </div>\n          <Link className=\"ml-2 block text-sm font-medium\" to=\"/\">\n            miny\n          </Link>\n        </div>\n        <Card>\n          <div className=\"prose prose-sm prose-slate prose-headings:font-medium\">\n            <h1>Datenschutzerkl\u00E4rung</h1>\n            <p>\n              Im folgenden Text wird \u00FCber die Art und Weise, wie\n              personenbezogene Daten auf dieser Webseite verarbeitet werden und\n              Ihre Rechte in Bezug auf die Verarbeitung von diesen Daten\n              informiert.\n            </p>\n            <h3>Verantwortlich</h3>\n            <p>\n              Jannik Baranczyk\n              <br />\n              E-Mail:{' '}\n              <a href=\"mailto:my.miny.app@gmail.com\" title=\"E-Mail\">\n                my.miny.app@gmail.com\n              </a>\n            </p>\n\n            <h3>Verarbeitung</h3>\n            <p>\n              Alle Anbieter au\u00DFerhalb der EU sind durch das{' '}\n              <a\n                href=\"https://www.privacyshield.gov/participant?id=a2zt0000000TTIbAAO\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                EU-US Privacy Shield\n              </a>{' '}\n              zertifiziert.\n            </p>\n\n            <h3>Hosting</h3>\n            <p>\n              Diese Webseite ist bei Vercel (Vercel Inc., 340 S Lemon Ave #4133,\n              Walnut, CA 91789, USA) gehostet. Vercel ist unter dem{' '}\n              <a\n                href=\"https://www.privacyshield.gov/participant?id=a2zt0000000TTIbAAO\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                EU-US Privacy Shield\n              </a>{' '}\n              zertifiziert und damit verpflichtet, den EU-Datenschutzvorgaben\n              nachzukommen.\n            </p>\n\n            <h3>Cookies</h3>\n            <p>\n              Diese Webseite verwendet <i>keine</i> Tracking-Cookies.\n            </p>\n\n            <h3>Registrierung</h3>\n            <p>\n              F\u00FCr die Registrierung auf dieser Website werden einige\n              personenbezogene Daten ben\u00F6tigt (Vorname, E-Mail), die \u00FCber eine\n              Eingabemaske an uns \u00FCbermittelt werden. Zum Zeitpunkt der\n              Registrierung werden zus\u00E4tzlich folgende Daten erhoben: Zeitpunkt\n              der Registrierung Ihre Registrierung ist f\u00FCr das Bereithalten\n              bestimmter Inhalte und Leistungen auf dieser Website erforderlich.\n            </p>\n\n            <h3>SSL Verschl\u00FCsselung</h3>\n            <p>\n              Um die Sicherheit Ihrer Daten bei der \u00DCbertragung zu sch\u00FCtzen,\n              verwenden wir dem aktuellen Stand der Technik entsprechende\n              Verschl\u00FCsselungsverfahren (z. B. SSL) \u00FCber HTTPS.\n            </p>\n\n            <h2>Rechte</h2>\n            <p>\n              Werden personenbezogene Daten von Ihnen verarbeitet stehen Ihnen\n              folgende Rechte zu. Sie k\u00F6nnen von Ihren Rechten Gebrauch machen,\n              indem Sie uns kontaktieren.\n            </p>\n            <h3>Recht auf Auskunft</h3>\n            <p>\n              Sie haben, gema\u0308\u00DF Art. 15 DSGVO, das Recht unentgeltlich Auskunft\n              \u00FCber die zu Ihrer Person gespeicherten personenbezogenen Daten,\n              sowie eine Kopie dieser Daten, zu erhalten.\n            </p>\n            <h3>Recht auf Daten\u00FCbertragbarkeit</h3>\n            <p>\n              Sie haben, gema\u0308\u00DF Art. 20 DSGVO, das Recht die \u00FCber Ihre Person\n              gespeicherten personenbezogenen Daten in einem strukturierten,\n              ga\u0308ngigen und maschinenlesbaren Format zu erhalten oder die\n              U\u0308bermittlung an einen anderen Verantwortlichen zu verlangen.\n            </p>\n            <h3>Recht auf Berichtigung</h3>\n            <p>\n              Sie haben, gema\u0308\u00DF Art. 16 DSGVO, das Recht die Berichtigung zu \u00FCber\n              die zu Ihrer Person gespeicherten personenbezogenen unrichtigen\n              oder unvollst\u00E4ndiger Daten zu verlangen.\n            </p>\n            <h3>Recht auf L\u00F6schung</h3>\n            <p>\n              Sie haben, gem\u00E4\u00DF Art. 17 DSGVO, das Recht die L\u00F6schung der bei uns\n              \u00FCber Ihre Person gespeicherten personenbezogenen Daten zu\n              verlangen, insofern diese nicht nicht zur Erf\u00FCllung einer\n              rechtlichen Verpflichtung, aus Gr\u00FCnden des \u00F6ffentlichen Interesses\n              oder zur Geltendmachung, Aus\u00FCbung oder Verteidigung von\n              Rechtsanspr\u00FCchen erforderlich sind.\n            </p>\n            <h3>Recht auf Widerruf</h3>\n            <p>\n              Beruht die Verarbeitung Ihrer personenbezogenen Daten auf einer\n              erteilten Einwilligung, haben Sie jederzeit das Recht diese\n              Einwilligung zu widerrufen.\n            </p>\n            <h3>Recht auf Einschr\u00E4nkung der Verarbeitung</h3>\n            <p>\n              Sind die Voraussetzungen gem\u00E4\u00DF Art. 18 erf\u00FCllt, haben Sie das\n              Recht die Einschr\u00E4nkung er Verarbeitung der \u00FCber Ihre Person\n              gespeicherten Daten zu verlangen.\n            </p>\n            <h3>Recht auf Mitteilung an Empf\u00E4nger</h3>\n            <p>\n              Sollten Sie die Berichtigung, L\u00F6schung oder eine Einschr\u00E4nkung der\n              Verarbeitung \u00FCber Ihre Person gespeicherten personenbezogenen\n              Daten nach Art. 16, 17 und 18 respektive verlangen, werden wir\n              diese nach Art. 19 DSGVO allen Empf\u00E4ngern, denen wir die\n              entsprechenden Daten offengelegt haben, mitteilen.\n            </p>\n            <h3>Recht auf Widerspruch</h3>\n            <p>\n              Sie haben das Recht, insofern Ihre personenbezogenen Daten auf\n              Grundlage von berechtigten Interessen gema\u0308\u00DF Art. 6 Abs. 1 S. 1\n              lit. f DSGVO verarbeitet werden und insofern daf\u00FCr Gr\u00FCnde\n              vorlegen, die sich aus Ihrer besonderen Situation ergeben, gema\u0308\u00DF\n              Art.21 DSGVO Widerspruch gegen die Verarbeitung Ihrer\n              personenbezogenen Daten einzulegen.\n            </p>\n          </div>\n        </Card>\n      </Container>\n    </div>\n  )\n}\n", "import {\n  useCatch,\n  useLoaderData,\n  useFetcher,\n  useParams,\n} from '@remix-run/react'\nimport {\n  LoaderFunction,\n  json,\n  ActionFunction,\n  redirect,\n  MetaFunction,\n} from '@remix-run/node'\nimport { useEffect } from 'react'\nimport { getUserBySlug } from '~/models/user.server'\nimport invariant from 'tiny-invariant'\nimport {\n  type DateWithParticipants,\n  getFreeDates,\n  dateExistsAndIsAvailable,\n  assignDate,\n  getDateById,\n  sendAssignmentEmail,\n} from '~/models/date.server'\nimport type { Appointment } from '@prisma/client'\nimport { badRequest, formatDate } from '~/utils'\n\nimport Container from '~/components/Container'\nimport Card from '~/components/Card'\nimport Header from '~/components/profile/Header'\nimport DateSlot from '~/components/profile/Date'\n\ntype LoaderData = {\n  user: {\n    id: number\n    name: string\n    email: string\n    slug: string | null\n  }\n  dates: DateWithParticipants[]\n  assignedDate: Appointment | null\n}\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const username = params.user\n  invariant(username, 'Invalid user slug')\n\n  const url = new URL(request.url)\n  const assigned = url.searchParams.get('assigned')\n\n  let assignedDate = null\n\n  if (typeof assigned === 'string' && !isNaN(Number(assigned))) {\n    assignedDate = await getDateById(Number(assigned))\n  }\n\n  const user = await getUserBySlug(username)\n  if (user === null) {\n    throw json('user not found', 404)\n  }\n\n  const dates = await getFreeDates(user.id)\n  return json<LoaderData>({ user, dates, assignedDate })\n}\n\nexport interface ActionData {\n  formError?: string\n}\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  const formData = await request.formData()\n  const name = formData.get('name')\n  const dateId = formData.get('dateId')\n\n  if (\n    typeof name !== 'string' ||\n    typeof dateId !== 'string' ||\n    isNaN(Number(dateId))\n  ) {\n    return badRequest<ActionData>({\n      formError: 'Fehlerhaftes Formular',\n    })\n  }\n\n  const appointment = await dateExistsAndIsAvailable(Number(dateId))\n  if (!appointment) {\n    throw json('appointment not found or already assigned', 403)\n  }\n\n  await assignDate(Number(dateId), name)\n  await sendAssignmentEmail(\n    { email: appointment.user.email, name: appointment.user.name },\n    name,\n    appointment\n  )\n\n  return redirect(`/u/${params.user}?assigned=${dateId}`)\n}\n\nexport const meta: MetaFunction = ({\n  data,\n}: {\n  data: LoaderData | undefined\n}) => {\n  if (data?.user) {\n    const title = `${data.user.name}${\n      data.user.name.slice(-1) === 's' ? \"'\" : 's'\n    } Diensttermine`\n\n    return {\n      title,\n      'og:title': `${title} | miny`,\n      'og:description': `${data.user.name} m\u00F6chte einen Diensttermin mit dir ausmachen`,\n    }\n  } else {\n    return {\n      title: 'Fehler',\n      'og:title': 'Fehler',\n      'og:description': 'Benutzer nicht gefunden',\n    }\n  }\n}\n\nexport default function UserPage() {\n  const { user, assignedDate, ...loaderData } = useLoaderData<LoaderData>()\n  const fetcher = useFetcher()\n  const params = useParams()\n\n  const data = fetcher.data || loaderData\n  const dates = data.dates\n\n  useEffect(() => {\n    const revalidate = () => {\n      if (document.visibilityState === 'visible') {\n        fetcher.load(`/u/${params.user}`)\n      }\n    }\n\n    document.addEventListener('visibilitychange', revalidate)\n\n    return () => {\n      document.removeEventListener('visibilitychange', revalidate)\n    }\n  }, [fetcher, params.user])\n\n  return (\n    <div className=\"py-10\">\n      <Container>\n        <Header />\n        {assignedDate && (\n          <Card withMarginTop>\n            <h1 className=\"font-serif text-2xl font-black text-slate-700\">\n              Viel Spa\u00DF im Dienst!\n            </h1>\n            <p className=\"mt-4\">Dein Termin mit {user.name}:</p>\n            <p className=\"font-medium text-amber-800\">\n              {formatDate(assignedDate.date.toString())},{' '}\n              {assignedDate.startTime}\n              {assignedDate.endTime && `\u2013${assignedDate.endTime}`}\n            </p>\n          </Card>\n        )}\n        <Card withMarginTop>\n          <h1 className=\"font-serif text-2xl font-black text-slate-700\">\n            {!assignedDate\n              ? `${user.name} m\u00F6chte einen Diensttermin mit dir ausmachen`\n              : `M\u00F6chtest du noch einen Termin mit ${user.name} ausmachen?`}\n          </h1>\n          {dates.length > 0 ? (\n            <>\n              <p className=\"mt-4\">\n                Tippe einfach auf das Kalender-Symbol, um dich f\u00FCr einen Termin\n                einzutragen. {user.name} bekommt dann automatisch eine\n                Nachricht.\n              </p>\n              <h2 className=\"mt-8 font-serif text-xl font-black text-slate-700\">\n                Termine\n              </h2>\n              <div className=\"flex flex-col space-y-4 divide-y divide-dashed\">\n                {dates.map((date: DateWithParticipants) => (\n                  <DateSlot date={date} key={date.id} />\n                ))}\n              </div>\n            </>\n          ) : (\n            <p className=\"mt-3 italic\">\n              Aktuell sind keine Termine eingetragen.\n            </p>\n          )}\n        </Card>\n      </Container>\n    </div>\n  )\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch()\n\n  let errorMessage = `Ein Fehler ist aufgetreten: ${caught.status} ${caught.statusText}`\n\n  switch (caught.status) {\n    case 403:\n      errorMessage =\n        'Dieser Termin existiert nicht mehr oder es hat sich bereits jemand anderes eingetragen.'\n      break\n    case 404:\n      errorMessage = 'Benutzer konnte nicht gefunden werden.'\n      break\n  }\n\n  return (\n    <div className=\"py-10\">\n      <Container>\n        <Header />\n        <Card withMarginTop>{errorMessage}</Card>\n      </Container>\n    </div>\n  )\n}\n", "import { Link } from '@remix-run/react'\n\nexport default function Header() {\n  return (\n    <div className=\"mb-8 flex items-center justify-between\">\n      <div className=\"flex items-center\">\n        <div className=\"block rounded-lg bg-red-400 bg-opacity-20 p-2\">\n          <img\n            src=\"/backpack.png\"\n            className=\"h-5\"\n            alt=\"Rucksack Emoji\"\n            height={20}\n            width={20}\n          />\n        </div>\n        <Link className=\"ml-2 block text-sm font-medium\" to=\"/\">\n          miny\n        </Link>\n      </div>\n      <Link\n        to=\"/register\"\n        className=\"text-sm text-amber-800 underline underline-offset-1 hover:text-amber-700\"\n      >\n        Jetzt anmelden\n      </Link>\n    </div>\n  )\n}\n", "import { useState } from 'react'\nimport { Form, useTransition } from '@remix-run/react'\nimport { type DateWithParticipants } from '~/models/date.server'\nimport { formatDate } from '~/utils'\nimport { labelStyles, inputStyles } from '../Input'\nimport { CalendarIcon } from '@heroicons/react/outline'\n\nexport default function DateSlot({ date }: { date: DateWithParticipants }) {\n  const [showForm, setShowForm] = useState(false)\n  const transition = useTransition()\n\n  return (\n    <div>\n      <div\n        className={`flex justify-between pt-4 ${\n          !date.isGroupDate && !date.note ? 'items-center' : 'items-start'\n        }`}\n      >\n        <div>\n          <span className=\"mb-1 block font-medium text-amber-800 sm:hidden\">\n            {formatDate(date.date.toString())}\n            <br />\n            <span className=\"text-slate-700\">\n              {date.startTime}\n              {date.endTime && `\u2013${date.endTime}`}\n            </span>\n          </span>\n          <span className=\"mb-1 hidden font-medium text-amber-800 sm:block\">\n            {formatDate(date.date.toString())}, {date.startTime}\n            {date.endTime ? `\u2013${date.endTime}` : null}\n          </span>\n\n          {date.note && (\n            <span className=\"text-sm italic\">Notiz: {date.note}</span>\n          )}\n\n          {date.isGroupDate && (\n            <>\n              <span className=\"block text-sm italic\">\n                Gruppentermin ({date.participants.length}/{date.maxParticipants}{' '}\n                Teilnehmer)\n              </span>\n              {date.participants.length > 0 && (\n                <div className=\"mt-3 flex items-center space-x-2\">\n                  <div className=\"flex -space-x-1 overflow-hidden\">\n                    {date.participants.slice(0, 4).map((participant, i) => (\n                      <div\n                        key={i}\n                        className=\"grid h-8 w-8 place-items-center rounded-full bg-slate-300 text-xs font-medium text-slate-700 ring-2 ring-white\"\n                        title={participant.name}\n                      >\n                        <span>{participant.name.slice(0, 1)}</span>\n                      </div>\n                    ))}\n                  </div>\n                  {date.participants.length > 4 && (\n                    <div className=\"ml-10 text-sm\">\n                      +{date.participants.length - 4} weitere\n                    </div>\n                  )}\n                </div>\n              )}\n            </>\n          )}\n        </div>\n        <div>\n          <button\n            className={`rounded-md border border-transparent bg-slate-700 px-2.5 py-2 text-xs font-medium uppercase tracking-widest text-white ring-slate-300 transition duration-150 ease-in-out hover:bg-slate-600 focus:border-slate-800 focus:outline-none focus:ring active:bg-slate-800 disabled:opacity-25 ${\n              showForm ? 'opacity-50' : ''\n            }`}\n            onClick={() => setShowForm(!showForm)}\n          >\n            <CalendarIcon className=\"h-4 w-4\" />\n          </button>\n        </div>\n      </div>\n\n      {showForm && (\n        <Form\n          className=\"mt-4 flex items-center space-x-2\"\n          method=\"post\"\n          reloadDocument\n        >\n          <fieldset\n            disabled={transition.state === 'submitting'}\n            className=\"flex-grow\"\n          >\n            <label htmlFor=\"name\" className={labelStyles}>\n              Dein Name\n            </label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              autoComplete=\"given-name\"\n              className={inputStyles}\n              required\n            />\n          </fieldset>\n          <input type=\"hidden\" name=\"dateId\" value={date.id} />\n          <button\n            className=\"mt-6 rounded-md border border-transparent bg-green-700 px-4 py-3 text-xs font-medium uppercase tracking-widest text-white ring-slate-300 transition duration-150 ease-in-out hover:bg-green-600 focus:border-green-800 focus:outline-none focus:ring active:bg-green-800 disabled:opacity-25\"\n            type=\"submit\"\n            disabled={transition.state === 'submitting'}\n          >\n            {transition.state === 'submitting' ? 'Sendet...' : 'Senden'}\n          </button>\n        </Form>\n      )}\n    </div>\n  )\n}\n", "import type { ActionFunction, LoaderFunction } from '@remix-run/node'\nimport { redirect } from '@remix-run/node'\nimport { logout } from '~/session.server'\n\nexport const action: ActionFunction = async ({ request }) => {\n  return logout(request)\n}\n\nexport const loader: LoaderFunction = async () => {\n  return redirect('/')\n}\n", "import {\n  type LoaderFunction,\n  json,\n  type MetaFunction,\n  type ActionFunction,\n} from '@remix-run/node'\nimport { Link, useLoaderData } from '@remix-run/react'\nimport { requireUser, requireUserId } from '~/session.server'\nimport {\n  deleteDate,\n  getDatesByUserId,\n  type DateWithParticipants,\n} from '~/models/date.server'\nimport type { PublicUser } from '~/models/user.server'\nimport { utcToZonedTime } from 'date-fns-tz'\n\nimport Container from '~/components/Container'\nimport Header from '~/components/dashboard/Header'\nimport Welcome from '~/components/dashboard/Welcome'\nimport Dates from '~/components/dashboard/Dates'\nimport { badRequest } from '~/utils'\n\ntype LoaderData = {\n  user: PublicUser\n  dates: DateWithParticipants[]\n  greeting: string\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const user = await requireUser(request)\n  const dates = await getDatesByUserId(user.id)\n  let greeting = 'Hey'\n\n  const currentHour = utcToZonedTime(new Date(), 'Europe/Berlin').getHours()\n  if (currentHour < 11 && currentHour > 4) {\n    greeting = 'Guten Morgen'\n  } else if (currentHour > 18) {\n    greeting = 'Guten Abend'\n  }\n\n  return json<LoaderData>({ user, dates, greeting })\n}\n\ninterface ActionData {\n  formError?: string\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData()\n  const method = formData.get('_method')\n  const dateId = formData.get('id')\n\n  if (\n    typeof method !== 'string' ||\n    typeof dateId !== 'string' ||\n    method !== 'delete'\n  ) {\n    throw badRequest<ActionData>({ formError: 'Ung\u00FCltige Anfrage' })\n  }\n\n  const userId = await requireUserId(request)\n\n  await deleteDate(Number(dateId), Number(userId))\n  return null\n}\n\nexport const meta: MetaFunction = ({ data }: { data: LoaderData }) => {\n  const user = data.user\n\n  if (user) {\n    return {\n      title: `${user.name}${\n        user.name.slice(-1) === 's' ? \"'\" : 's'\n      } Diensttermine`,\n    }\n  }\n\n  return {\n    title: 'Dashboard',\n  }\n}\n\nexport default function Dashboard() {\n  const { user, dates, greeting } = useLoaderData() as LoaderData\n\n  return (\n    <div className=\"py-10\">\n      <Container>\n        <Header username={user.name} />\n        <Welcome user={user} greeting={greeting} />\n        <Dates dates={dates} />\n        <div className=\"mt-4 text-center text-xs text-slate-500\">\n          <span className=\"block\">\n            v1.0 &middot; Danke f\u00FCr die Idee, Linda!\n          </span>\n          <a\n            href=\"https://github.com/wh1zk1d/miny/blob/main/CHANGELOG.md\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            title=\"Changelog\"\n            className=\"underline underline-offset-1\"\n          >\n            Changelog\n          </a>{' '}\n          &middot;{' '}\n          <Link to=\"/privacy\" className=\"underline underline-offset-1\">\n            Datenschutzerkl\u00E4rung\n          </Link>\n        </div>\n      </Container>\n    </div>\n  )\n}\n", "import { Link } from '@remix-run/react'\nimport type { PublicUser } from '~/models/user.server'\nimport Card from '../Card'\nimport { headingStyles } from '../Heading'\n\nexport default function Welcome({\n  user,\n  greeting,\n}: {\n  user: PublicUser\n  greeting: string\n}) {\n  const firstLogin = user.loginCount === 0\n\n  return (\n    <Card>\n      <h1 className={headingStyles}>\n        {greeting} {user.name}!\n      </h1>\n      {firstLogin && (\n        <div className=\"mt-4\">\n          <h3 className=\"mb-0.5 font-medium text-amber-800\">\n            Willkommen bei miny!\n          </h3>\n          <p>\n            Hier kannst du ganz einfach deine freien Termine anlegen und sie\n            dann per Link an alle schicken, mit denen du dich gerne verabreden\n            m\u00F6chtest. Du wirst automatisch per E-Mail benachrichtigt, wenn sich\n            jemand f\u00FCr einen deiner Termine eintr\u00E4gt.\n          </p>\n        </div>\n      )}\n      <p className=\"mt-3\">\n        <span className=\"block text-sm font-medium text-amber-800\">\n          Dein Link zum Teilen:\n        </span>\n        <Link to={`/u/${user.slug}`} className=\"underline underline-offset-1\">\n          https://dienst.vercel.app/u/{user.slug}\n        </Link>\n      </p>\n    </Card>\n  )\n}\n", "import { Form, Link, useTransition } from '@remix-run/react'\nimport type { DateWithParticipants } from '~/models/date.server'\nimport { PlusIcon, PencilIcon, TrashIcon } from '@heroicons/react/outline'\nimport Card from '../Card'\nimport { headingStyles } from '../Heading'\nimport { formatDate } from '~/utils'\n\nfunction DateSlot({ date }: { date: DateWithParticipants }) {\n  const transition = useTransition()\n\n  return (\n    <div className=\"flex items-center justify-between pt-4\">\n      <div>\n        <span\n          className={`mb-1 block font-medium ${\n            date.isAssigned ? 'text-red-700' : 'text-green-700'\n          }`}\n        >\n          {formatDate(date.date.toString())}, {date.startTime}\n          {date.endTime && `\u2013${date.endTime}`}\n        </span>\n\n        {date.isGroupDate && (\n          <>\n            <span className=\"block text-sm italic text-slate-700\">\n              Gruppentermin ({date.participants.length}/{date.maxParticipants})\n            </span>\n            {date.participants.length > 0 && (\n              <ul className=\"mt-2 list-inside list-disc\">\n                {date.participants.map((participant, i) => (\n                  <li key={i} className=\"text-sm\">\n                    {participant.name}\n                  </li>\n                ))}\n              </ul>\n            )}\n          </>\n        )}\n\n        {!date.isGroupDate &&\n          (date.isAssigned ? (\n            <span className=\"block text-sm text-slate-700\">\n              Mit: {date.partnerName}\n            </span>\n          ) : (\n            <span className=\"block text-sm italic\">Noch frei</span>\n          ))}\n\n        {date.note && (\n          <span\n            className={`block text-sm italic ${\n              date.isGroupDate && date.participants.length > 0 ? 'mt-2' : 'mt-1'\n            }`}\n          >\n            Notiz: {date.note}\n          </span>\n        )}\n      </div>\n      <div>\n        <div className=\"flex items-center space-x-3 sm:space-x-2\">\n          <Link to={`/edit/${date.id}`}>\n            <button\n              className=\"opacity-50 transition-opacity duration-75 hover:opacity-100\"\n              title=\"Bearbeiten\"\n              aria-label=\"Termin bearbeiten\"\n            >\n              <PencilIcon className=\"h-5 sm:h-4\" />\n            </button>\n          </Link>\n          <Form\n            method=\"post\"\n            onSubmit={event => {\n              if (\n                !window.confirm('M\u00F6chtest du diesen Termin wirklich l\u00F6schen?')\n              ) {\n                event.preventDefault()\n              }\n            }}\n          >\n            <input type=\"hidden\" name=\"_method\" value=\"delete\" />\n            <input type=\"hidden\" name=\"id\" value={date.id} />\n            <button\n              className=\"opacity-50 transition-opacity duration-75 hover:opacity-100 disabled:opacity-25\"\n              title=\"L\u00F6schen\"\n              aria-label=\"Termin l\u00F6schen\"\n              type=\"submit\"\n              disabled={transition.state !== 'idle'}\n            >\n              <TrashIcon className=\"h-5 sm:h-4\" />\n            </button>\n          </Form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default function Dates({ dates }: { dates: DateWithParticipants[] }) {\n  const hasDates = dates.length > 0\n\n  return (\n    <Card withMarginTop>\n      <div className=\"flex items-center justify-between\">\n        <h2 className={headingStyles}>Deine Termine</h2>\n        <Link\n          className=\"flex items-center rounded-md border border-transparent bg-slate-700 px-3 py-2 pl-3 text-xs font-medium uppercase tracking-widest text-white ring-slate-300 transition duration-75 ease-in-out hover:bg-slate-600 focus:border-slate-800 focus:outline-none focus:ring active:bg-slate-600 disabled:opacity-25\"\n          to=\"/new\"\n        >\n          <PlusIcon className=\"mr-2 h-3.5\" /> Neu\n        </Link>\n      </div>\n      {!hasDates && (\n        <p className=\"mt-6 italic\">\n          Du hast aktuell keine Termine eingetragen.\n        </p>\n      )}\n\n      {hasDates && (\n        <div className=\"mt-3 flex flex-col space-y-4 divide-y divide-dashed\">\n          {dates.map(date => (\n            <DateSlot date={date} key={date.id} />\n          ))}\n        </div>\n      )}\n    </Card>\n  )\n}\n", "import React from 'react'\nimport {\n  Form,\n  Link,\n  useActionData,\n  useTransition,\n  useSearchParams,\n} from '@remix-run/react'\nimport {\n  type LoaderFunction,\n  type ActionFunction,\n  type MetaFunction,\n  json,\n  redirect,\n  type HeadersFunction,\n} from '@remix-run/node'\nimport { createUserSession, getUserId } from '~/session.server'\nimport { badRequest, validateEmail } from '~/utils'\nimport { ErrorBadge } from '~/components/Badges'\nimport { labelStyles, inputStyles, errorStyles } from '~/components/Input'\nimport { SubmitButton } from '~/components/Buttons'\nimport { verifyLogin } from '~/models/user.server'\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request)\n  if (userId) return redirect('/')\n  return json({})\n}\n\ninterface ActionData {\n  formError?: string\n  errors?: {\n    email?: string\n    password?: string\n  }\n  fields?: {\n    email: string\n    password: string\n  }\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData()\n\n  const email = formData.get('email')\n  const password = formData.get('password')\n  const redirectTo = formData.get('redirectTo')\n  const remember = formData.get('remember')\n\n  if (!validateEmail(email)) {\n    return badRequest<ActionData>({\n      errors: {\n        email: 'Ung\u00FCltige E-Mail',\n      },\n    })\n  }\n\n  if (typeof password !== 'string') {\n    return badRequest<ActionData>({\n      errors: {\n        password: 'Passwort wird ben\u00F6tigt',\n      },\n    })\n  }\n\n  if (password.length < 6) {\n    return badRequest<ActionData>({\n      errors: {\n        password: 'Passwort ist zu kurz',\n      },\n    })\n  }\n\n  const fields = {\n    email,\n    password,\n    remember,\n  }\n\n  const user = await verifyLogin(email, password)\n\n  if (!user) {\n    return badRequest<ActionData>({\n      formError: 'E-Mail oder Passwort ist falsch',\n      fields,\n    })\n  }\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: remember === 'on' ? true : false,\n    redirectTo: typeof redirectTo === 'string' ? redirectTo : '/',\n  })\n}\n\nexport const headers: HeadersFunction = () => {\n  return {\n    'Cache-Control': `s-maxage=${60 * 60 * 24 * 30}`,\n  }\n}\n\nexport const meta: MetaFunction = () => {\n  return { title: 'Login' }\n}\n\nexport default function Login() {\n  const [searchParams] = useSearchParams()\n  const redirectTo = searchParams.get('redirectTo') || '/'\n  const actionData = useActionData<ActionData>()\n  const transition = useTransition()\n  const emailRef = React.useRef<HTMLInputElement>(null)\n  const passwordRef = React.useRef<HTMLInputElement>(null)\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus()\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus()\n    }\n  }, [actionData])\n\n  return (\n    <div className=\"flex min-h-screen flex-col items-center justify-center\">\n      <div className=\"block rounded-lg bg-red-400 bg-opacity-20 p-2\">\n        <img\n          src=\"/backpack.png\"\n          className=\"h-8\"\n          alt=\"Rucksack Emoji\"\n          height={32}\n          width={32}\n        />\n      </div>\n      <div className=\"mt-6 w-full max-w-xs rounded-lg bg-white px-6 py-4 shadow-md sm:max-w-md\">\n        <Form method=\"post\">\n          {actionData?.formError ? (\n            <ErrorBadge message={actionData.formError} />\n          ) : null}\n\n          <fieldset disabled={transition.state === 'submitting'}>\n            <div>\n              <label htmlFor={'email'} className={labelStyles}>\n                E-Mail\n              </label>\n\n              <input\n                ref={emailRef}\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                className={inputStyles}\n                required\n                autoFocus={true}\n                autoComplete=\"email\"\n                defaultValue={actionData?.fields?.email}\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n              />\n              {actionData?.errors?.email && (\n                <p className={errorStyles} role=\"alert\" id=\"email-error\">\n                  {actionData.errors.email}\n                </p>\n              )}\n            </div>\n\n            <div className=\"mt-4\">\n              <label htmlFor={'password'} className={labelStyles}>\n                Passwort\n              </label>\n              <input\n                ref={passwordRef}\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                className={inputStyles}\n                required\n                autoComplete=\"current-password\"\n                defaultValue={actionData?.fields?.password}\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n              />\n              {actionData?.errors?.password && (\n                <p className={errorStyles} role=\"alert\" id=\"password-error\">\n                  {actionData.errors.password}\n                </p>\n              )}\n            </div>\n\n            <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n\n            <div className=\"mt-4 flex items-center\">\n              <input\n                id=\"remember\"\n                name=\"remember\"\n                type=\"checkbox\"\n                defaultChecked\n                className=\"h-4 w-4 rounded border-slate-300 text-slate-600 focus:ring-slate-200 focus:ring-opacity-50\"\n              />\n              <label\n                htmlFor=\"remember\"\n                className=\"ml-2 block text-sm font-medium\"\n              >\n                Angemeldet bleiben\n              </label>\n            </div>\n\n            <div className=\"mt-4 flex items-center justify-between\">\n              <div className=\"space-y-1\">\n                <Link\n                  className=\"block text-sm underline hover:text-slate-900\"\n                  to={{\n                    pathname: '/register',\n                    search: searchParams.toString(),\n                  }}\n                >\n                  Registrieren\n                </Link>\n              </div>\n\n              <SubmitButton\n                type=\"submit\"\n                label={\n                  transition.state === 'submitting' ? 'Lade...' : 'Anmelden'\n                }\n              />\n            </div>\n          </fieldset>\n        </Form>\n      </div>\n      <Link\n        to=\"/privacy\"\n        className=\"mt-4 text-center text-xs text-slate-500 underline\"\n      >\n        Datenschutzerkl\u00E4rung\n      </Link>\n    </div>\n  )\n}\n", "import {\n  useLoaderData,\n  useActionData,\n  useTransition,\n  Link,\n  Form,\n} from '@remix-run/react'\nimport { useState } from 'react'\nimport type { User } from '~/models/user.server'\nimport {\n  json,\n  type LoaderFunction,\n  type MetaFunction,\n  type ActionFunction,\n  redirect,\n} from '@remix-run/node'\nimport { requireUser, requireUserId } from '~/session.server'\nimport { isPast, addDays, format } from 'date-fns'\n\nimport Container from '~/components/Container'\nimport Header from '~/components/dashboard/Header'\nimport Card from '~/components/Card'\nimport { headingStyles } from '~/components/Heading'\nimport Input from '~/components/Input'\nimport { SubmitButton } from '~/components/Buttons'\nimport { createDate } from '~/models/date.server'\nimport { badRequest, onlySpaces, validateDate, validateTime } from '~/utils'\nimport { ErrorBadge } from '~/components/Badges'\n\ntype LoaderData = { user: User }\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const user = await requireUser(request)\n  return json({ user })\n}\n\ninterface ActionData {\n  formError?: string\n  errors?: {\n    date?: string\n    startTime?: string\n    endTime?: string\n    isGroupDate?: string\n    maxParticipants?: string\n    note?: string\n    partner?: string\n  }\n  fields?: {\n    date: string\n    startTime: string\n    endTime: string | null\n    isGroupDate: boolean\n    maxParticipants: number | null\n    note: string | null\n    partner: string | null\n    selfAssignPartner: boolean\n    isFlexible: boolean\n  }\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const userId = await requireUserId(request)\n\n  const formData = await request.formData()\n  const date = formData.get('date')\n  const startTime = formData.get('startTime')\n  const endTime = formData.get('endTime')\n  const isGroupDate = formData.get('isGroupDate')\n  const maxParticipants = formData.get('maxParticipants')\n  const note = formData.get('note')\n  const flexible = formData.get('flexibleTime')\n  const selfAssigned = formData.get('selfAssignPartner')\n  const partner = formData.get('partner')\n\n  if (typeof date !== 'string' || typeof startTime !== 'string') {\n    return badRequest<ActionData>({\n      formError: 'Pflichtfelder wurden nicht ausgef\u00FCllt',\n    })\n  }\n\n  let fields = {\n    date,\n    startTime,\n    endTime: typeof endTime === 'string' ? endTime : null,\n    isGroupDate: isGroupDate === 'on',\n    maxParticipants:\n      typeof maxParticipants === 'string' ? parseInt(maxParticipants) : null,\n    note: typeof note === 'string' ? note : null,\n    isFlexible: flexible === 'on',\n    selfAssignPartner: selfAssigned === 'on',\n    partner: typeof partner === 'string' ? partner : null,\n  }\n\n  // Validate date\n  if (!validateDate(date)) {\n    return badRequest<ActionData>({\n      fields,\n      errors: {\n        date: 'Ung\u00FCltiges Datum',\n      },\n    })\n  }\n\n  if (isPast(new Date(date))) {\n    return badRequest<ActionData>({\n      fields,\n      errors: {\n        date: 'Ung\u00FCltiges Datum (zu fr\u00FCh)',\n      },\n    })\n  }\n\n  fields.date = new Date(date).toISOString()\n\n  // Validate start and end time\n  if (!fields.isFlexible && !validateTime(fields.startTime)) {\n    return badRequest<ActionData>({\n      fields,\n      errors: {\n        startTime: 'Ung\u00FCltige Uhrzeit',\n      },\n    })\n  }\n\n  if (fields.isFlexible && onlySpaces(fields.startTime)) {\n    return badRequest<ActionData>({\n      fields,\n      errors: {\n        startTime: 'Ung\u00FCltiges Format',\n      },\n    })\n  } else {\n    // Remove any whitespace at start and end\n    fields.startTime = fields.startTime.trim()\n  }\n\n  if (fields.endTime && !validateTime(fields.endTime)) {\n    return badRequest<ActionData>({\n      fields,\n      errors: {\n        endTime: 'Ung\u00FCltige Uhrzeit',\n      },\n    })\n  }\n\n  if (fields.endTime && fields.endTime < fields.startTime) {\n    return badRequest<ActionData>({\n      fields,\n      errors: {\n        endTime: 'Fr\u00FCher als Start',\n      },\n    })\n  }\n\n  // Validate maxParticipants\n  if (fields.maxParticipants) {\n    if (isNaN(fields.maxParticipants)) {\n      return badRequest<ActionData>({\n        fields,\n        errors: {\n          maxParticipants: 'Keine g\u00FCltige Zahl',\n        },\n      })\n    }\n    if (fields.maxParticipants > 100) {\n      return badRequest<ActionData>({\n        fields,\n        errors: {\n          maxParticipants: 'Max. 100 erlaubt',\n        },\n      })\n    }\n  }\n\n  await createDate(fields, userId)\n  return redirect('/')\n}\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Neuer Termin',\n  }\n}\n\nexport default function CreateDate() {\n  const { user } = useLoaderData() as LoaderData\n  const actionData = useActionData<ActionData>()\n  const transition = useTransition()\n  const [isGroupDate, setIsGroupDate] = useState(false)\n  const [fixedStart, setFixedStart] = useState(true)\n  const [selfAssignPartner, setSelfAssignPartner] = useState(false)\n\n  const tomorrow = format(addDays(new Date(), 1), 'yyyy-MM-dd')\n\n  return (\n    <div className=\"py-10\">\n      <Container>\n        <Header username={user.name} />\n        <Card withMarginTop>\n          <h1 className={headingStyles}>Neuer Termin</h1>\n          <Form className=\"mt-4\" method=\"post\">\n            {actionData?.formError ? (\n              <ErrorBadge message={actionData.formError} />\n            ) : null}\n            <fieldset disabled={transition.state === 'submitting'}>\n              <div>\n                <Input\n                  name=\"date\"\n                  id=\"date\"\n                  label=\"Datum*\"\n                  type=\"date\"\n                  min={tomorrow}\n                  defaultValue={\n                    actionData?.errors?.date\n                      ? actionData.fields?.date\n                      : tomorrow\n                  }\n                  required\n                  validationError={actionData?.errors?.date}\n                />\n              </div>\n\n              <div className=\"mt-6 flex items-center\">\n                <input\n                  id=\"flexibleTime\"\n                  name=\"flexibleTime\"\n                  type=\"checkbox\"\n                  defaultChecked={actionData?.fields?.isFlexible}\n                  onChange={() => setFixedStart(!fixedStart)}\n                  className=\"h-4 w-4 rounded border-slate-300 text-slate-600 focus:ring-slate-200 focus:ring-opacity-50\"\n                />\n                <label htmlFor=\"flexibleTime\" className=\"ml-2 block\">\n                  Flexible Zeit\n                </label>\n              </div>\n\n              <div className=\"mt-4 flex space-x-4\">\n                <div className=\"w-full\">\n                  <Input\n                    name=\"startTime\"\n                    id=\"startTime\"\n                    label={fixedStart ? 'Von*' : 'Zeit*'}\n                    type={fixedStart ? 'time' : 'text'}\n                    placeholder={!fixedStart ? 'Vormittags' : ''}\n                    defaultValue={actionData?.fields?.startTime}\n                    validationError={actionData?.errors?.startTime}\n                    required\n                  />\n                </div>\n                {fixedStart ? (\n                  <div className=\"w-full\">\n                    <Input\n                      name=\"endTime\"\n                      id=\"endTime\"\n                      label=\"Bis\"\n                      type=\"time\"\n                      defaultValue={actionData?.fields?.endTime || undefined}\n                      validationError={actionData?.errors?.endTime}\n                    />\n                  </div>\n                ) : null}\n              </div>\n\n              {!selfAssignPartner && (\n                <div className=\"mt-6 flex items-center\">\n                  <input\n                    id=\"groupDate\"\n                    name=\"isGroupDate\"\n                    type=\"checkbox\"\n                    defaultChecked={actionData?.fields?.isGroupDate}\n                    onChange={e => setIsGroupDate(e.target.checked)}\n                    className=\"h-4 w-4 rounded border-slate-300 text-slate-600 focus:ring-slate-200 focus:ring-opacity-50\"\n                  />\n                  <label htmlFor=\"groupDate\" className=\"ml-2 block\">\n                    Gruppentermin\n                  </label>\n                </div>\n              )}\n\n              {isGroupDate && (\n                <div className=\"mt-4\">\n                  <Input\n                    label=\"Wie viele sollen mitmachen k\u00F6nnen? (Max. 100)*\"\n                    id=\"maxParticipants\"\n                    name=\"maxParticipants\"\n                    type=\"number\"\n                    min={2}\n                    max={100}\n                    maxLength={3}\n                    defaultValue={actionData?.fields?.maxParticipants || 2}\n                    pattern=\"[0-9]\"\n                    validationError={actionData?.errors?.maxParticipants}\n                    required\n                  />\n                </div>\n              )}\n\n              <div className=\"mt-4\">\n                <Input\n                  label=\"Notiz\"\n                  id=\"note\"\n                  name=\"note\"\n                  type=\"text\"\n                  defaultValue={actionData?.fields?.note || undefined}\n                  validationError={actionData?.errors?.note}\n                />\n              </div>\n\n              {!isGroupDate && (\n                <div className=\"mt-6 flex items-center\">\n                  <input\n                    id=\"selfAssignedPartner\"\n                    name=\"selfAssignedPartner\"\n                    type=\"checkbox\"\n                    onChange={() => setSelfAssignPartner(!selfAssignPartner)}\n                    className=\"h-4 w-4 rounded border-slate-300 text-slate-600 focus:ring-slate-200 focus:ring-opacity-50\"\n                  />\n                  <label htmlFor=\"selfAssignedPartner\" className=\"ml-2 block\">\n                    Partner eintragen\n                  </label>\n                </div>\n              )}\n\n              {selfAssignPartner && (\n                <div className=\"mt-4\">\n                  <Input\n                    label=\"Partner*\"\n                    id=\"partner\"\n                    name=\"partner\"\n                    type=\"text\"\n                    defaultValue={actionData?.fields?.partner || undefined}\n                    validationError={actionData?.errors?.partner}\n                    required\n                  />\n                </div>\n              )}\n            </fieldset>\n\n            <div className=\"mt-8 flex items-center justify-between\">\n              <Link to=\"/\" className=\"text-sm underline underline-offset-1\">\n                Zur\u00FCck\n              </Link>\n              <SubmitButton\n                type=\"submit\"\n                title=\"Speichern\"\n                disabled={transition.state === 'submitting'}\n                label={\n                  transition.state === 'submitting'\n                    ? 'Speichert...'\n                    : 'Speichern'\n                }\n              />\n            </div>\n          </Form>\n        </Card>\n      </Container>\n    </div>\n  )\n}\n", "export default {'version':'e44c93d7','entry':{'module':'/build/entry.client-4IZYHJR3.js','imports':['/build/_shared/chunk-M4DMO3GR.js','/build/_shared/chunk-6BO74FWO.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-Y7TZOGF4.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/edit/$id':{'id':'routes/edit/$id','parentId':'root','path':'edit/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/edit/$id-YXGROVMV.js','imports':['/build/_shared/chunk-FGHYCDT6.js','/build/_shared/chunk-CH2HUYIY.js','/build/_shared/chunk-GXQHJDY2.js','/build/_shared/chunk-ME5PAYV3.js','/build/_shared/chunk-FA22HLKB.js','/build/_shared/chunk-GBAK6V7Z.js','/build/_shared/chunk-U2UXWUPQ.js','/build/_shared/chunk-2JAM6762.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/healthcheck':{'id':'routes/healthcheck','parentId':'root','path':'healthcheck','index':undefined,'caseSensitive':undefined,'module':'/build/routes/healthcheck-PYNWKQNA.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-AEVY2BUU.js','imports':['/build/_shared/chunk-CH2HUYIY.js','/build/_shared/chunk-ME5PAYV3.js','/build/_shared/chunk-FA22HLKB.js','/build/_shared/chunk-U2UXWUPQ.js','/build/_shared/chunk-2JAM6762.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-43WGJF7B.js','imports':['/build/_shared/chunk-GXQHJDY2.js','/build/_shared/chunk-ME5PAYV3.js','/build/_shared/chunk-DFG4XZEI.js','/build/_shared/chunk-GBAK6V7Z.js','/build/_shared/chunk-U2UXWUPQ.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-CCLI45LE.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/new':{'id':'routes/new','parentId':'root','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/new-CDTZGBHA.js','imports':['/build/_shared/chunk-FGHYCDT6.js','/build/_shared/chunk-CH2HUYIY.js','/build/_shared/chunk-GXQHJDY2.js','/build/_shared/chunk-ME5PAYV3.js','/build/_shared/chunk-FA22HLKB.js','/build/_shared/chunk-GBAK6V7Z.js','/build/_shared/chunk-U2UXWUPQ.js','/build/_shared/chunk-2JAM6762.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/privacy':{'id':'routes/privacy','parentId':'root','path':'privacy','index':undefined,'caseSensitive':undefined,'module':'/build/routes/privacy-XJX6XJPO.js','imports':['/build/_shared/chunk-2JAM6762.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/register':{'id':'routes/register','parentId':'root','path':'register','index':undefined,'caseSensitive':undefined,'module':'/build/routes/register-2CL37V3G.js','imports':['/build/_shared/chunk-GXQHJDY2.js','/build/_shared/chunk-ME5PAYV3.js','/build/_shared/chunk-DFG4XZEI.js','/build/_shared/chunk-GBAK6V7Z.js','/build/_shared/chunk-U2UXWUPQ.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/u/$user':{'id':'routes/u/$user','parentId':'root','path':'u/:user','index':undefined,'caseSensitive':undefined,'module':'/build/routes/u/$user-RPKQRCPF.js','imports':['/build/_shared/chunk-FA22HLKB.js','/build/_shared/chunk-DFG4XZEI.js','/build/_shared/chunk-GBAK6V7Z.js','/build/_shared/chunk-U2UXWUPQ.js','/build/_shared/chunk-2JAM6762.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':false}},'url':'/build/manifest-E44C93D7.js'};", "\nimport * as entryServer from \"/Users/jannik/www/miny/app/entry.server.tsx\";\nimport * as route0 from \"/Users/jannik/www/miny/app/root.tsx\";\nimport * as route1 from \"/Users/jannik/www/miny/app/routes/healthcheck.tsx\";\nimport * as route2 from \"/Users/jannik/www/miny/app/routes/edit/$id.tsx\";\nimport * as route3 from \"/Users/jannik/www/miny/app/routes/register.tsx\";\nimport * as route4 from \"/Users/jannik/www/miny/app/routes/privacy.tsx\";\nimport * as route5 from \"/Users/jannik/www/miny/app/routes/u/$user.tsx\";\nimport * as route6 from \"/Users/jannik/www/miny/app/routes/logout.tsx\";\nimport * as route7 from \"/Users/jannik/www/miny/app/routes/index.tsx\";\nimport * as route8 from \"/Users/jannik/www/miny/app/routes/login.tsx\";\nimport * as route9 from \"/Users/jannik/www/miny/app/routes/new.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/healthcheck\": {\n      id: \"routes/healthcheck\",\n      parentId: \"root\",\n      path: \"healthcheck\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/edit/$id\": {\n      id: \"routes/edit/$id\",\n      parentId: \"root\",\n      path: \"edit/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/register\": {\n      id: \"routes/register\",\n      parentId: \"root\",\n      path: \"register\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/privacy\": {\n      id: \"routes/privacy\",\n      parentId: \"root\",\n      path: \"privacy\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/u/$user\": {\n      id: \"routes/u/$user\",\n      parentId: \"root\",\n      path: \"u/:user\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/new\": {\n      id: \"routes/new\",\n      parentId: \"root\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    }\n  };"],
  "mappings": "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",
  "names": []
}
